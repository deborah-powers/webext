j'utilise les exemples wef-xxx.

https://developer.mozilla.org/fr/docs/Mozilla/Add-ons/WebExtensions/Your_first_WebExtension
https://developer.mozilla.org/fr/docs/Mozilla/Add-ons/WebExtensions/Your_second_WebExtension
https://developer.mozilla.org/fr/docs/Mozilla/Add-ons/WebExtensions/Add_a_button_to_the_toolbar

======================== publier une extension dans chrome ========================

https://support.google.com/chrome/a/answer/2714278?hl=fr#:~:text=Pour%20ajouter%20une%20application%20ou,dans%20le%20Chrome%20Web%20Store.
https://support.google.com/chrome/a/answer/2649489
https://developer.chrome.com/docs/webstore/publish?hl=fr
me collecter à la console d'administration de google avec un compte administrateur. powers.dev est mon compte administrateur, que j'utilise pour mon github. powers89 est aussi un compte administrateur.

mon extension est chargée dans le gestionnaire d'extensions, non empaquetée.
me créer un compte de développeur chrome web store. payer 5E.
activer la validation en deux étapes.
compresser mon extension au format .zip
https://chrome.google.com/webstore/devconsole/3094d15f-41a7-492a-ae44-82ccdf3f9617?hl=fr

dans le gestionnaire d'extension,
empaqueter l'extension

résultat:
Extension : C:\Users\LENOVO\Desktop\webext\we3-md-maison.crx
Fichier de clé : C:\Users\LENOVO\Desktop\webext\we3-md-maison.pem

https://chrome.google.com/webstore/devconsole/3094d15f-41a7-492a-ae44-82ccdf3f9617/oogpeihldfjfakheibjdifojcjkloapl/edit

Conservez votre fichier de clé en lieu sûr. Vous en aurez besoin lors de la création de nouvelles versions de l'extension.

======================== installation provisoire ========================

************************ pour chrome ************************

chrome://extensions/
activer le mode développeur
bouton "charger l'extension non empaquetée"

"service worker registration failed" chrome web extension
'browser_action' requires manifest version of 2 or lower.

************************ pour firefox ************************

about:debugging#/runtime/this-firefox
bouton "charger un module complémentaire temporaire"
sélectionner un des fichiers de mon extension

https://extensionworkshop.com/documentation/publish/
penser à la signature gecko

cd /home/ent6904919/Bureau/bnf-remplir-page/
zip -r -FS ../bnf-test.zip * --exclude 'icon-128.bmp'
renommer le .zip en .xpi

l'uploader sur https://addons.mozilla.org/fr/developers/addons

======================== divers ========================

dans manifest.json
content_scripts.matches = <all_urls> ou https://*/* ou encore une liste d'urls.
"web_accessible_resources": []
liste des images et autres injectés dans la page. pas pour les scripts js.

utiliser un script inline dans chrome
dans manifest.json
"minimum_chrome_version": "46",
"content_security_policy": "script-src 'self' 'sha256-WOdSzz11/3cpqOdrm89LBL2UPwEU9EhbDtMy2OciEhs='",

une popup a du mal à contenir un script mais elle peux charger une feuille de style css ou un script js. ils doivent être contenus dans le dossier de l'extension. il n'y a pas besoin de les préciser dans le manifest.

faire communiquer deux wext entre elle: cf wec3-message-sender et wec3-message-receiver.